<!-- Styles.xaml -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ServisVozila"
                    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml">

    <!-- Reusable Style for TextBlock Alignment -->
    <Style x:Key="DataGridCellStyle" TargetType="TextBlock">
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Style TargetType="Button" x:Key="menuButtonStyle">
        <Setter Property="Background" Value="#d9d9d9" />
        <Setter Property="Foreground" Value="#636363" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <Image Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" Width="32" Height="32" Margin="10,0,0,0" />
                                <ContentPresenter Margin="20,0,0,0" VerticalAlignment="Center" />
                            </StackPanel>
                        </Border>
                        <Border x:Name="LeftHighlightBorder" Background="Transparent" Width="4" HorizontalAlignment="Left" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Hover Effect -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LeftHighlightBorder" Property="Background" Value="#0073E6" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="Background" Value="#D9E8FC" />
                            <Setter Property="Foreground" Value="#288BFB" />
                        </Trigger>

                        <!-- Clicked Effect -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="LeftHighlightBorder" Property="Background" Value="#0073E6" />
                            <Setter Property="Background" Value="#B2D0F5" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>



    </Style>

    <Style x:Key="CustomCardButton" TargetType="Button">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#E0E0E0"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder" 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="8"
                        Padding="10">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <!-- Icon -->
                                <ColumnDefinition Width="*"/>
                                <!-- Text -->
                                <ColumnDefinition Width="Auto"/>
                                <!-- Arrow -->
                            </Grid.ColumnDefinitions>

                            <!-- Icon -->
                            <Image Source="{Binding ImagePath}" Width="30" Height="30" 
                               VerticalAlignment="Center" Margin="5"/>

                            <!-- Text Stack -->
                            <StackPanel Grid.Column="1" VerticalAlignment="Center" Margin="10,0">
                                <TextBlock Text="{Binding MainText}" FontWeight="Bold" FontSize="14"/>
                                <TextBlock Text="{Binding SubText}" FontSize="12" Foreground="Gray"/>
                            </StackPanel>

                            <!-- Chevron Arrow -->
                            <TextBlock Grid.Column="2" Text=">" FontSize="16" 
                                   VerticalAlignment="Center" Foreground="Gray"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Hover Effect -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="#fbfbfb"/>
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="#d4d4d4"/>
                            <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="1,1,1,2"/>
                            <!-- Thicker bottom border -->
                        </Trigger>

                        <!-- Mouse Leave Effect -->
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="White"/>
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="#E0E0E0"/>
                            <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomCardButtonWithDropdown" TargetType="Button">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#E0E0E0"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder" 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="8"
                        Padding="10">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <!--<Image Source="{Binding Tag.ImagePath, RelativeSource={RelativeSource TemplatedParent}}"
                                   Width="30" Height="30"
                                   VerticalAlignment="Center" Margin="5"/>-->

                            <!-- Dropdown Button -->
                            <StackPanel Grid.Column="1" VerticalAlignment="Center" Margin="10,0">
                                <ui:DropDownButton Content="Ostale uplate" FontWeight="Bold" MinWidth="100" Icon="Images/cash-50.png">
                                    <ui:DropDownButton.Flyout>
                                        <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}"
                                                        ItemsSource="{Binding VrstePrometaCollection}">
                                            <ContextMenu.ItemContainerStyle>
                                                <Style TargetType="MenuItem">
                                                    <Setter Property="Header" Value="{Binding Naziv}" />
                                                </Style>
                                            </ContextMenu.ItemContainerStyle>
                                        </ContextMenu>
                                    </ui:DropDownButton.Flyout>
                                </ui:DropDownButton>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="#fbfbfb"/>
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="#d4d4d4"/>
                            <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="1,1,1,2"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="White"/>
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="#E0E0E0"/>
                            <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <Path x:Name="Arrow" Data="M 0 0 L 4 4 L 8 0 Z" HorizontalAlignment="Right" VerticalAlignment="Center" Stroke="{TemplateBinding Foreground}" Fill="{TemplateBinding Foreground}" Margin="5"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="DefaultTextComboBox" TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="IsEditable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton"
                                  Template="{StaticResource ComboBoxToggleButton}"
                                  Grid.Column="2"
                                  Focusable="false"
                                  ClickMode="Press"
                                  IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                        <ContentPresenter x:Name="ContentPresenter"
                                      Content="Ostale uplate"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left"
                                      Margin="5,0,0,0"/>
                        <Popup Name="Popup"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           AllowsTransparency="True"
                           PopupAnimation="Slide">
                            <Border Name="DropDownBorder"
                                Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                Margin="1">
                                <ScrollViewer>
                                    <StackPanel IsItemsHost="True" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    
    <Style x:Key="MenuButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <!-- Root Grid with Background binding -->
                    <Grid Background="{TemplateBinding Background}">
                        <!-- Left Border Strip -->
                        <Border x:Name="LeftStrip" 
                            Width="4" 
                            Background="Transparent"
                            HorizontalAlignment="Left"/>
                        <!-- Content area -->
                        <ContentPresenter VerticalAlignment="Center" 
                                      HorizontalAlignment="Stretch"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Selected State -->
                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                            <Setter TargetName="LeftStrip" Property="Background" Value="#005B96"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="Background" Value="LightBlue"/>
                        </DataTrigger>

                        <!-- Hover State -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#D9E8FC"/>
                            <Setter Property="Background" Value="#0096C8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <DataTemplate x:Key="MenuButtonTemplate">
        <Button Command="{Binding Command}" 
               Style="{StaticResource MenuButtonStyle}" 
               Height="50">
            <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                <Image Source="{Binding ImagePath}" Height="25"/>
                <TextBlock Text="{Binding Title}" 
                        Margin="10 3 0 0"
                        VerticalAlignment="Center" FontSize="16" FontWeight="SemiBold" />
            </StackPanel>
        </Button>
    </DataTemplate>

    <!--ScrolBar stil-->

    <Style x:Key="ScrollBarTrackThumb"
        TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Width="Auto"
                                Height="Auto"
                                Fill="Transparent" />
                        <Border x:Name="CornerScrollBarRectangle"
                            CornerRadius="5"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Width="Auto"
                            Height="Auto"
                            Margin="0,1,0,1"
                            Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag"
                                Value="Horizontal">
                            <Setter TargetName="CornerScrollBarRectangle"
                                Property="Width"
                                Value="Auto" />
                            <Setter TargetName="CornerScrollBarRectangle"
                                Property="Height"
                                Value="6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ScrollBar}" x:Key="ScrollBarApple">
        <Setter Property="Stylus.IsFlicksEnabled"
            Value="false" />
        <Setter Property="Foreground"
            Value="#ADABAB" />
        <Setter Property="Background"
            Value="Transparent" />
        <Setter Property="Width"
            Value="7" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot"
                        Width="7"
                        Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>
                        <Track x:Name="PART_Track"
                            Grid.Row="0"
                            IsDirectionReversed="true"
                            Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb"
                                    Background="{TemplateBinding Foreground}"
                                    Style="{DynamicResource ScrollBarTrackThumb}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp"
                                            Command="ScrollBar.PageDownCommand"
                                            Opacity="0"
                                            Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown"
                                            Command="ScrollBar.PageUpCommand"
                                            Opacity="0"
                                            Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb"
                                Property="IsMouseOver"
                                Value="true">
                            <Setter Value="{DynamicResource ButtonSelectBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                        </Trigger>
                        <Trigger SourceName="Thumb"
                                Property="IsDragging"
                                Value="true">
                            <Setter Value="{DynamicResource DarkBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                        </Trigger>

                        <Trigger Property="IsEnabled"
                                Value="false">
                            <Setter TargetName="Thumb"
                                Property="Visibility"
                                Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation"
                                Value="Horizontal">
                            <Setter TargetName="GridRoot"
                                Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track"
                                Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width"
                                Value="Auto" />
                            <Setter Property="Height"
                                Value="8" />
                            <Setter TargetName="Thumb"
                                Property="Tag"
                                Value="Horizontal" />
                            <Setter TargetName="PageDown"
                                Property="Command"
                                Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp"
                                Property="Command"
                                Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--ColumnHeaderStyle-->
    <Style x:Key="DataGridHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="White" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SeparatorVisibility" Value="Hidden"/>
        <Setter Property="Margin" Value="5,0,0,0" />
    </Style>

    <Style x:Name="DataGridRowStyle" TargetType="DataGridRow">
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="Štampa"  />
                </ContextMenu>
            </Setter.Value>
        </Setter>
    </Style>


    <!--DataGridTextColumn stil-->
    <!-- Style for TextBlock in DataGridTextColumn -->
    <Style x:Key="DataGridTextColumnStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Roboto" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="5,0,0,0"/>
    </Style>

</ResourceDictionary>
